<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
					    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       					http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       					http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="true">

	<description>Shiro安全配置</description>


	<!-- 用户授权信息Cache, 采用EhCache -->

	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:config/ehcache-shiro.xml"/>
	</bean>


	<!-- 会话ID生成器 -->
	<!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>-->

	<!-- 会话Cookie模板 -->
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
	当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
<!--	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="-1"/>
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="2592000"/>&lt;!&ndash; 30天 &ndash;&gt;
	</bean>-->

	<!-- rememberMe管理器 -->
<!--	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		&lt;!&ndash; rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）&ndash;&gt;
		<property name="cipherKey"
				  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
		<property name="cookie" ref="rememberMeCookie"/>
	</bean>-->



	<!-- 会话DAO -->
<!--	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>-->

	<!-- 会话验证调度器 -->
<!--	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>-->

	<!-- 会话管理器 -->
<!--	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000"/>
		<property name="deleteInvalidSessions" value="true"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>-->

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.xinhuanet.hylanda.security.credentials.RetryLimitHashedCredentialsMatcher">
		<!--<constructor-arg ref="shiroFilterChainDefinitions"/>-->
		<constructor-arg ref="shiroEhcacheManager"/>
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="2"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.xinhuanet.hylanda.security.realm.ShiroDbRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="cachingEnabled" value="false"/>
	</bean>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm"/>
		<property name="cacheManager" ref="shiroEhcacheManager"/>
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
<!--
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>
-->

	<!-- 基于Form表单的身份验证过滤器 -->
	<!--<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username"/>
		<property name="passwordParam" value="password"/>
		<property name="rememberMeParam" value="rememberMe"/>
		<property name="loginUrl" value="/login"/>
	</bean>
-->
	<bean id="sysUserFilter" class="com.xinhuanet.hylanda.security.filter.SysUserFilter"/>

	<!-- Shiro Filter -->
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<property name="successUrl" value="/index/"/>
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login"/>
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/"></property>
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="captchaFormAuthenticationFilter"/>
				<entry key="sysUser" value-ref="sysUserFilter"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>


	<!-- shiro权限过滤 -->
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/test/** = anon
				/login = authc
				/index/** = authc
			</value>
		</constructor-arg>
	</bean>

	<bean id="captchaFormAuthenticationFilter" class="com.xinhuanet.hylanda.security.filter.CaptchaFormAuthenticationFilter"/>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>
